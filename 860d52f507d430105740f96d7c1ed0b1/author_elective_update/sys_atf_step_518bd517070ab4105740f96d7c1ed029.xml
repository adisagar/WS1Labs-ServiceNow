<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="DELETE">
        <active>true</active>
        <copied_from/>
        <description>Set the components on the page as follows:
'Textarea &lt;textarea&gt; [undefined]' = TEST FOO
</description>
        <display_name>Set Component Values (Custom UI)</display_name>
        <inputs/>
        <mugshots_cache_json>{"215089d5ce9f76b89122896fac63c582":"{\"area\":\"default\",\"sn_atf_mugshot_short_description\":\"Textarea &lt;textarea&gt; [undefined]\",\"sn_atf_mugshot_long_description\":\"Textarea &lt;textarea&gt; [undefined]: if(runprocessingscript == 'actionflow'){ gs.inf...\",\"methods\":[\"setValue\"],\"sn_atf_mugshot_label\":\"undefined\",\"index\":13,\"type\":\"textarea\",\"version\":\"19.0\",\"get_value_result\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\",\"sn_atf_mugshot_tag_display_name\":\"Textarea &lt;textarea&gt;\",\"sn_atf_mugshot_value\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\",\"tag\":\"textarea\",\"isDisabled\":false,\"id\":\"undefined\",\"aria-label\":\"{{textarea}}\",\"hash\":\"215089d5ce9f76b89122896fac63c582\",\"html_value\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\"}"}</mugshots_cache_json>
        <notes/>
        <order>3</order>
        <snapshot/>
        <step_config display_value="Set Component Values (Custom UI)">e5dd168473330300c79260bdfaf6a794</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-23 18:40:00</sys_created_on>
        <sys_id>518bd517070ab4105740f96d7c1ed029</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Set Component Values (Custom UI)</sys_name>
        <sys_package display_value="WS1UEMSpoke" source="x_646971_uemconn_0">860d52f507d430105740f96d7c1ed0b1</sys_package>
        <sys_policy/>
        <sys_scope display_value="WS1UEMSpoke">860d52f507d430105740f96d7c1ed0b1</sys_scope>
        <sys_update_name>sys_atf_step_518bd517070ab4105740f96d7c1ed029</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-23 19:19:31</sys_updated_on>
        <table/>
        <test display_value="WS1UEmTestPopup">2020588a074ab0105740f96d7c1ed0dd</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="DELETE" query="document_key=518bd517070ab4105740f96d7c1ed029"/>
    <sys_variable_value action="DELETE">
        <document>sys_atf_step</document>
        <document_key>518bd517070ab4105740f96d7c1ed029</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-23 18:40:00</sys_created_on>
        <sys_id>ac1c9517070ab4105740f96d7c1ed099</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-23 18:40:00</sys_updated_on>
        <value>215089d5ce9f76b89122896fac63c582=TEST FOO^EQ</value>
        <variable display_value="Component values">d12fde8473330300c79260bdfaf6a7b5</variable>
    </sys_variable_value>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="WS1UEMSpoke">860d52f507d430105740f96d7c1ed0b1</application>
        <file_path/>
        <instance_id>3cc72800dbd6ec10f492c59705961995</instance_id>
        <instance_name>dev106506</instance_name>
        <name>sys_atf_step_518bd517070ab4105740f96d7c1ed029</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step"><sys_atf_step action="INSERT_OR_UPDATE"><active>true</active><copied_from/><description>Set the components on the page as follows:
'Textarea &lt;textarea&gt; [undefined]' = TEST FOO
</description><display_name>Set Component Values (Custom UI)</display_name><inputs/><mugshots_cache_json>{"215089d5ce9f76b89122896fac63c582":"{\"area\":\"default\",\"sn_atf_mugshot_short_description\":\"Textarea &lt;textarea&gt; [undefined]\",\"sn_atf_mugshot_long_description\":\"Textarea &lt;textarea&gt; [undefined]: if(runprocessingscript == 'actionflow'){ gs.inf...\",\"methods\":[\"setValue\"],\"sn_atf_mugshot_label\":\"undefined\",\"index\":13,\"type\":\"textarea\",\"version\":\"19.0\",\"get_value_result\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\",\"sn_atf_mugshot_tag_display_name\":\"Textarea &lt;textarea&gt;\",\"sn_atf_mugshot_value\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\",\"tag\":\"textarea\",\"isDisabled\":false,\"id\":\"undefined\",\"aria-label\":\"{{textarea}}\",\"hash\":\"215089d5ce9f76b89122896fac63c582\",\"html_value\":\"if(runprocessingscript == 'actionflow'){\\n\\t\\n    gs.info(\\\"Running action flow from UI Page\\\");\\n    gs.info(\\\"sid value \\\" + sid);\\n    gs.info(\\\"current value \\\" + current);\\n\\n\\tvar session = gs.getSession();\\n\\tvar addr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\t\\n\\tvar util = new GlideRecord('incident');\\n\\tutil.get(sid);\\t\\n\\t\\n\\ttry {\\n\\t\\tvar inputs = {};\\n\\t\\tinputs['current'] = util; // GlideRecord of table:  \\n\\t\\tinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n        sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inBackground().withInputs(inputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n//\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1uemactionfromscript').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar messages = ex.getMessage();\\n\\t\\tgs.error(messages);\\n\\t}\\n\\n   response.sendRedirect(addr);\\n}\\n\\n\\nif(runprocessingscript == 'refreshdevices'){\\n\\t// Update message on screen\\n//\\tcurrent.x_646971_uemconn_0_ws1uem = \\\"Checking for new devices in WS1 UEM\\\";\\n\\n\\tutil = new GlideRecord('incident');\\n\\tutil.get(sid);\\n\\t\\n\\t// call the flow to get all devices for this caller and add them if they don't exist\\n\\ttry {\\n\\t\\tvar refreshinputs = {};\\n\\t\\trefreshinputs['current'] = util; // GlideRecord of table:  \\n\\t\\trefreshinputs['table_name'] = 'incident';\\n\\n\\t\\t// Start Asynchronously: Uncomment to run in background.\\n\\t\\tsn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inBackground().withInputs(refreshinputs).run();\\n\\t\\t\\t\\t\\n\\t\\t// Execute Synchronously: Run in foreground.\\n\\t\\t// sn_fd.FlowAPI.getRunner().flow('x_646971_uemconn_0.ws1alluemgetdevices').inForeground().withInputs(inputs).run();\\n\\t\\t\\n\\t} catch (ex) {\\n\\t\\tvar message = ex.getMessage();\\n\\t\\tgs.error(message);\\n\\t}\\n\\n\\tsession = gs.getSession();\\n\\taddr = session.getUrlOnStack();\\n\\tgs.info(\\\"URL \\\" + addr);\\n\\t\\n\\tresponse.sendRedirect(addr);\\n}\\n\\n\\n\\n\\nundefined\"}"}</mugshots_cache_json><notes/><order>3</order><snapshot/><step_config display_value="Set Component Values (Custom UI)">e5dd168473330300c79260bdfaf6a794</step_config><sys_class_name>sys_atf_step</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-08-23 18:40:00</sys_created_on><sys_id>518bd517070ab4105740f96d7c1ed029</sys_id><sys_mod_count>2</sys_mod_count><sys_name>Set Component Values (Custom UI)</sys_name><sys_package display_value="WS1UEMSpoke" source="x_646971_uemconn_0">860d52f507d430105740f96d7c1ed0b1</sys_package><sys_policy/><sys_scope display_value="WS1UEMSpoke">860d52f507d430105740f96d7c1ed0b1</sys_scope><sys_update_name>sys_atf_step_518bd517070ab4105740f96d7c1ed029</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-08-23 19:19:31</sys_updated_on><table/><test display_value="WS1UEmTestPopup">2020588a074ab0105740f96d7c1ed0dd</test><timeout/><warning_message/></sys_atf_step><sys_variable_value action="delete_multiple" query="document_key=518bd517070ab4105740f96d7c1ed029"/><sys_variable_value action="INSERT_OR_UPDATE"><document>sys_atf_step</document><document_key>518bd517070ab4105740f96d7c1ed029</document_key><order>100</order><sys_class_name>sys_variable_value</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-08-23 18:40:00</sys_created_on><sys_id>ac1c9517070ab4105740f96d7c1ed099</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-08-23 18:40:00</sys_updated_on><value>215089d5ce9f76b89122896fac63c582=TEST FOO^EQ</value><variable display_value="Component values">d12fde8473330300c79260bdfaf6a7b5</variable></sys_variable_value></record_update>]]></payload>
        <payload_hash>323360682</payload_hash>
        <record_name>Set Component Values (Custom UI)</record_name>
        <reverted_from/>
        <source>52031ea1070d30105740f96d7c1ed0ec</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-23 19:19:31</sys_created_on>
        <sys_id>5315e1db070ab4105740f96d7c1ed07d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17b74741c4a0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-23 19:19:31</sys_updated_on>
        <type>Test Step</type>
        <update_guid>d715e1dbfe0ab410dfdc4620fa65107c</update_guid>
        <update_guid_history>d715e1dbfe0ab410dfdc4620fa65107c:323360682,ac1c9517f30ab410e7dcf0e44348179b:1734381737</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-23 19:30:46</sys_created_on>
        <sys_db_object display_value="" name="sys_atf_step">sys_atf_step</sys_db_object>
        <sys_id>4feaf27cb4ec4ca999e4168917259d81</sys_id>
        <sys_metadata>518bd517070ab4105740f96d7c1ed029</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Component Values (Custom UI)</sys_name>
        <sys_package display_value="WS1UEMSpoke" source="x_646971_uemconn_0">860d52f507d430105740f96d7c1ed0b1</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="WS1UEMSpoke">860d52f507d430105740f96d7c1ed0b1</sys_scope>
        <sys_scope_delete display_value="">b9f2a502508d4d2c95f09a1b5f7a9784</sys_scope_delete>
        <sys_update_name>sys_atf_step_518bd517070ab4105740f96d7c1ed029</sys_update_name>
        <sys_update_version display_value="sys_atf_step_518bd517070ab4105740f96d7c1ed029">5315e1db070ab4105740f96d7c1ed07d</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-23 19:30:46</sys_updated_on>
    </sys_metadata_delete>
</record_update>
